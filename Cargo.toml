[package]
authors = ["Al Liu <scygliu1@gmail.com>"]
name = "wg"
description = "Golang like WaitGroup implementation for sync/async Rust."
homepage = "https://github.com/al8n/wg"
repository = "https://github.com/al8n/wg.git"
documentation = "https://docs.rs/wg/"
readme = "README.md"
version = "0.3.2"
license = "MIT OR Apache-2.0"
keywords = ["waitgroup", "async", "sync", "notify", "wake"]
categories = ["asynchronous", "concurrency", "data-structures"]
edition = "2021"

[features]
default = ["parking_lot", "triomphe"]
std = []

[dependencies]
atomic-waker = "1"
parking_lot = {version = "0.12", optional = true }
triomphe = { version = "0.1", optional = true }

[dev-dependencies]
tokio = { version = "1.17", features = ["test-util", "rt", "rt-multi-thread", "macros"] }
async-std = { version = "1.12.0", features = ["attributes"]  }